#!/bin/bash
#PBS -l nodes=1:ppn=4,vmem=40gb
#PBS -l walltime=6:30:00
#PBS -N generate-networkneuro

set -x
set -e

count_cm=`jq -r '.count' config.json`
density_cm=`jq -r '.density' config.json`
length_cm=`jq -r '.length' config.json`
denlen_cm=`jq -r '.denlen' config.json`
conmats="count density length denlen"

# make outdir if not already made
[ ! -d netneuro ] && mkdir -p netneuro netneuro/output netneuro/surfaces netneuro/roipairs

# needed to identify which raw datatype to use grab assignment info
[ ! -f netneuro/output/assignments.csv ] && time singularity exec -e docker://brainlife/dipy:1.4.0 ./generate_networkneuro.py

# generate visualization of parcellation
[ ! -f netneuro/surfaces/index.json ] && time singularity exec -e docker://brainlife/pythonvtk:1.1 ./parc2vtk.py

# copy conmats to netneuro/outputs
for i in ${conmats}
do
	if [ ! -f netneuro/output/${i}.csv ]; then
		cm=$(eval "echo \$${i}_cm")
		cp -v ${cm}/correlation.csv ./netneuro/output/${i}.csv
	fi
done

if [ ! -f netneuro/roipairs/index.json ]; then
	echo "something went wrong. check derivatives"
	exit 1
else
	echo "netneuro datatype generated!"
	rm -rf *.csv *.nii.gz
	cp netneuro/surfaces/index.json netneuro/labels.json
	exit 0
fi
